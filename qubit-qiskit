import numpy as np
from qiskit import QuantumCircuit, transpile, assemble, Aer, execute
from qiskit.visualization import plot_bloch_multivector

# Quantum circuit setup
n_qubits = 4  # Number of qubits
circuit = QuantumCircuit(n_qubits, n_qubits)

# Create a superposition state for the first qubit
circuit.h(0)

# Create entanglement between qubits
for qubit in range(1, n_qubits):
    circuit.cx(0, qubit)  # Apply a CNOT gate for entanglement

# Measurement
circuit.measure(range(n_qubits), range(n_qubits))

# Simulator
simulator = Aer.get_backend('qasm_simulator')

# Execute the circuit on the simulator
job = execute(circuit, simulator, shots=1024)

# Get the results
result = job.result()

# Get the counts of each measurement outcome
counts = result.get_counts(circuit)

print(counts)

# Visualization of the results
plot_bloch_multivector(result.get_statevector(circuit))
